$date
	Wed Aug 11 13:25:21 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ns
$end
$scope module Adder4bit_tb $end
$var wire 4 ! S [3:0] $end
$var wire 1 " Co $end
$var reg 1 # Ci $end
$var reg 4 $ X [3:0] $end
$var reg 4 % Y [3:0] $end
$scope module n1 $end
$var wire 4 & X [3:0] $end
$var wire 4 ' Y [3:0] $end
$var wire 1 ( w3 $end
$var wire 1 ) w2 $end
$var wire 1 * w1 $end
$var wire 4 + S [3:0] $end
$var wire 1 " Co $end
$scope module u1 $end
$var wire 1 , Ci $end
$var wire 1 * Co $end
$var wire 1 - S $end
$var wire 1 . X $end
$var wire 1 / Y $end
$var wire 1 0 w1 $end
$var wire 1 1 w2 $end
$var wire 1 2 w3 $end
$upscope $end
$scope module u2 $end
$var wire 1 * Ci $end
$var wire 1 ) Co $end
$var wire 1 3 S $end
$var wire 1 4 X $end
$var wire 1 5 Y $end
$var wire 1 6 w1 $end
$var wire 1 7 w2 $end
$var wire 1 8 w3 $end
$upscope $end
$scope module u3 $end
$var wire 1 ) Ci $end
$var wire 1 ( Co $end
$var wire 1 9 S $end
$var wire 1 : X $end
$var wire 1 ; Y $end
$var wire 1 < w1 $end
$var wire 1 = w2 $end
$var wire 1 > w3 $end
$upscope $end
$scope module u4 $end
$var wire 1 ( Ci $end
$var wire 1 " Co $end
$var wire 1 ? S $end
$var wire 1 @ X $end
$var wire 1 A Y $end
$var wire 1 B w1 $end
$var wire 1 C w2 $end
$var wire 1 D w3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
b0 +
0*
0)
0(
b0 '
b0 &
b0 %
b0 $
0#
0"
b0 !
$end
#100
19
1-
13
b1111 !
b1111 +
1?
1<
10
16
1B
1;
1.
14
1@
b100 %
b100 '
b1011 $
b1011 &
#120
1)
1"
03
17
0?
1C
0-
1*
b100 !
b100 +
19
1(
00
12
0<
1>
1/
1A
1:
0@
1#
b1101 %
b1101 '
b111 $
b111 &
